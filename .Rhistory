geom_errorbar(df0,mapping=aes(x = site, ymin = perm-sd, ymax=perm+sd,colour=perm_type),
width=.1, position=pd)) +
geom_line(position=pd) +
geom_point(position=pd, size=3)
ggplot(data = df0, aes(x = site, y=perm,colour=perm_type))+geom_point()+
geom_errorbar(df0,mapping=aes(x = site, ymin = perm-sd, ymax=perm+sd,colour=perm_type),
width=.1, position=pd) +
geom_line(position=pd) +
geom_point(position=pd, size=3)
pd <- position_dodge(0.5)
ggplot(data = df0, aes(x = site, y=perm,colour=perm_type))+geom_point()+
geom_errorbar(df0,mapping=aes(x = site, ymin = perm-sd, ymax=perm+sd,colour=perm_type),
width=.1, position=pd) +
geom_line(position=pd) + NULL
ggplot(data = df0, aes(x = site, y=perm,colour=perm_type))+geom_point(position=pd)+
geom_errorbar(df0,mapping=aes(x = site, ymin = perm-sd, ymax=perm+sd,colour=perm_type),
width=.1, position=pd) +
geom_line(position=pd) + NULL
ggplot(data = df0, aes(x = site, y=perm,colour=perm_type))+geom_point(position=pd)+
geom_errorbar(df0,mapping=aes(x = site, ymin = perm-sd, ymax=perm+sd,colour=perm_type),
width=1, position=pd) +
geom_line(position=pd) + NULL
ggplot(data = df0, aes(x = site, y=perm,colour=perm_type))+geom_point(position=pd)+
geom_errorbar(df0,mapping=aes(x = site, ymin = perm-sd, ymax=perm+sd,colour=perm_type),
width=1, position=pd)
pd <- position_dodge(0.5)
ggplot(data = df0, aes(x = site, y=perm,colour=perm_type))+geom_line(position=pd,type=dashed)+
geom_errorbar(df0,mapping=aes(x = site, ymin = perm-sd, ymax=perm+sd,colour=perm_type),
width=1, position=pd)
pd <- position_dodge(0.5)
ggplot(data = df0, aes(x = site, y=perm,colour=perm_type))+geom_line(position=pd,type='dashed')+
geom_errorbar(df0,mapping=aes(x = site, ymin = perm-sd, ymax=perm+sd,colour=perm_type),
width=1, position=pd)
pd <- position_dodge(0.5)
ggplot(data = df0, aes(x = site, y=perm,colour=perm_type))+geom_point(position=pd)+
geom_errorbar(df0,mapping=aes(x = site, ymin = perm-sd, ymax=perm+sd,colour=perm_type),
width=1, position=pd)
library(shinystan)
library(rstan)
library(loo)
library(cowplot)
library(ggsci)
setwd('C:/Users/mmorenozam/Documents/MyPapers/1.cbf_v1.0/2.outputs/2.loo_waic') # where the outputs are
################################################### camu
load('c_m1.Rsave')
cm1 = extract_log_lik(fit)
load('c_m2.Rsave')
cm2 = extract_log_lik(fit)
load('c_m4.Rsave')
cm3 = extract_log_lik(fit)
load('c_m5.Rsave')
cm4 = extract_log_lik(fit)
dat=c('cm1','cm2','cm3','cm4')
result_w = data.frame(matrix(nrow = 4, ncol = 2))
for (i in 1:length(dat)){
result_w[i,]=waic(eval(parse(text=dat[i])))$estimates[3,]
}
result_w = cbind(result_w,c('M1','M2','M3','M4'))
result_w$method = 'WAIC'
colnames(result_w)[1:3]=c('Estimate','SE','Model')
#ggplot(result_w,aes(x=Model,y=Estimate))+
#  geom_point(size=3,colour='red')+
#  geom_errorbar(aes(ymin=Estimate-SE, ymax=Estimate+SE), width=.1,colour='red')
result_l = data.frame(matrix(nrow = 4, ncol = 2))
for (i in 1:length(dat)){
result_l[i,]=loo(eval(parse(text=dat[i])))$estimates[3,]
}
result_l = cbind(result_l,c('M1','M2','M3','M4'))
result_l$method = 'LOO'
colnames(result_l)[1:3]=c('Estimate','SE','Model')
#ggplot(result_l,aes(x=Model,y=Estimate))+
#  geom_point(size=3,colour='red')+
#  geom_errorbar(aes(ymin=Estimate-SE, ymax=Estimate+SE), width=.1,colour='red')
bay1 = rbind(result_l,result_w)
dodge = position_dodge(width=0.3)
camu=ggplot(bay1,aes(x=Model,y=Estimate,colour=method)) +
geom_point(position=dodge) +
geom_errorbar(aes(ymax=Estimate+SE,ymin=Estimate-SE),position = dodge,size=0.25,width=0.2)+
scale_y_continuous(limits = c(-130,50))+
theme(legend.position = c(0.8, 0.8))+
scale_color_jco() +
labs(color='Method')
###################################################### box1
#launch_shinystan(fit)
load('b1_m1.Rsave')
cm1 = extract_log_lik(fit)
load('b1_m2.Rsave')
cm2 = extract_log_lik(fit)
load('b1_m4.Rsave')
cm3 = extract_log_lik(fit)
load('b1_m5.Rsave')
cm4 = extract_log_lik(fit)
result_w = data.frame(matrix(nrow = 4, ncol = 2))
for (i in 1:length(dat)){
result_w[i,]=waic(eval(parse(text=dat[i])))$estimates[3,]
}
#result_w[2,]=waic(cm2[1:2000,1:3,1:104])$estimates[3,]
waic(cm2)
result_w = cbind(result_w,c('M1','M2','M3','M4'))
result_w$method = 'WAIC'
colnames(result_w)[1:3]=c('Estimate','SE','Model')
#ggplot(result_w,aes(x=Model,y=Estimate))+
#  geom_point(size=3,colour='red')+
#  geom_errorbar(aes(ymin=Estimate-SE, ymax=Estimate+SE), width=.1,colour='red')
result_l = data.frame(matrix(nrow = 4, ncol = 2))
for (i in 1:length(dat)){
result_l[i,]=loo(eval(parse(text=dat[i])))$estimates[3,]
}
#result_l[2,]=loo(cm2[1:2000,1:3,1:104])$estimates[3,]
result_l = cbind(result_l,c('M1','M2','M3','M4'))
result_l$method = 'LOO'
colnames(result_l)[1:3]=c('Estimate','SE','Model')
#ggplot(result_l,aes(x=Model,y=Estimate))+
#  geom_point(size=3,colour='red')+
#  geom_errorbar(aes(ymin=Estimate-SE, ymax=Estimate+SE), width=.1,colour='red')
bay2 = rbind(result_l,result_w)
box1=ggplot(bay2,aes(x=Model,y=Estimate,colour=method)) +
geom_point(position=dodge) +
geom_errorbar(aes(ymax=Estimate+SE,ymin=Estimate-SE),position = dodge,size=0.25,width=0.2)+
scale_y_continuous(limits = c(-130,50))+
theme(legend.position = c(0.8, 0.8))+
labs(y=NULL)+
scale_color_jco() +
labs(color='Method')
########################################################### box2
load('b2_m1.Rsave')
cm1 = extract_log_lik(fit)
load('b2_m2.Rsave')
cm2 = extract_log_lik(fit)
load('b2_m4.Rsave')
cm3 = extract_log_lik(fit)
load('b2_m5.Rsave')
cm4 = extract_log_lik(fit)
result_w = data.frame(matrix(nrow = 4, ncol = 2))
for (i in 1:length(dat)){
result_w[i,]=waic(eval(parse(text=dat[i])))$estimates[3,]
}
result_w = cbind(result_w,c('M1','M2','M3','M4'))
result_w$method = 'WAIC'
colnames(result_w)[1:3]=c('Estimate','SE','Model')
#ggplot(result_w,aes(x=Model,y=Estimate))+
#  geom_point(size=3,colour='red')+
#  geom_errorbar(aes(ymin=Estimate-SE, ymax=Estimate+SE), width=.1,colour='red')
result_l = data.frame(matrix(nrow = 4, ncol = 2))
for (i in 1:length(dat)){
result_l[i,]=loo(eval(parse(text=dat[i])))$estimates[3,]
}
result_l = cbind(result_l,c('M1','M2','M3','M4'))
result_l$method = 'LOO'
colnames(result_l)[1:3]=c('Estimate','SE','Model')
#ggplot(result_l,aes(x=Model,y=Estimate))+
#  geom_point(size=3,colour='red')+
#  geom_errorbar(aes(ymin=Estimate-SE, ymax=Estimate+SE), width=.1,colour='red')
bay3 = rbind(result_l,result_w)
box2=ggplot(bay3,aes(x=Model,y=Estimate,colour=method)) +
geom_point(position=dodge) +
geom_errorbar(aes(ymax=Estimate+SE,ymin=Estimate-SE),position = dodge,size=0.25,width=0.2)+
scale_y_continuous(limits = c(-130,50))+
theme(legend.position = c(0.8, 0.8))+
labs(y=NULL)+
scale_color_jco() +
labs(color='Method')
plot = plot_grid(camu,box1,box2,ncol=3,align='hv',labels=c('(a)','(b)','(c)'),label_size = 18)
save_plot('s3c.png',plot,base_height = 4,base_width = 15)
result_w
result_l
waic(cm1)
lula<-loo(cm1)
plot(lula)
summary(lula)
lula
knitr::opts_chunk$set(echo = TRUE)
library(cowplot)
library(ggplot2)
library(rstan)
library(latex2exp)
library(ggsci)
library(dplyr)
library(tidyr)
knitr::include_graphics("figures/fig1.png")
library(knitr)
library(kableExtra)
c1 <- c("M1","M2","M3","M4")
c2 <- c('no','yes','yes','yes')
c3 <- c('no','no','yes','yes')
c4 <- c('no','no','no','yes')
df = data.frame(cbind(c1,c2,c3,c4))
colnames(df) <- c('Model','Multiple substrate','Product toxicity','Population size effect\nfor LA consumption')
kable(df,caption='Table 2. Summary of model`s iterations.')%>%kable_styling(full_width = F)
library(cowplot)
library(ggplot2)
library(rstan)
library(latex2exp)
library(ggsci)
setwd('C:/Users/mmorenozam/Documents/MyPapers/1.cbf_v1.0/2.outputs/1.main') # where the outputs are
#in the following line, change for the name of the output of which one wants the traceplots
load('m5_camu.RSave')
getSimsTable <- function(x, ...){
require(dplyr)
nChains <- dim(x)[2]
nPost <- dim(x)[1]
x %>%
as.data.frame(...) %>%
mutate(chain = rep(1:nChains, ea = nPost),
iteration = rep(1:nPost, nChains))
}
#in the following line, change for the name of the output of which one wants the traceplots
load('m5_c.RSave')
getSimsTable <- function(x, ...){
require(dplyr)
nChains <- dim(x)[2]
nPost <- dim(x)[1]
x %>%
as.data.frame(...) %>%
mutate(chain = rep(1:nChains, ea = nPost),
iteration = rep(1:nPost, nChains))
}
data = getSimsTable(fit)
mu1 = '$\\mu_{max}^{Y_{Glc}}$'
mu2 = '$\\mu_{max}^{Y_{Fru}}$'
mu3 = '$\\mu_{max}^{LAB}$'
mu4 = '$\\mu_{max}^{AAB_{EtOH}}$'
mu5 = '$\\mu_{max}^{AAB_{LA}}$'
ks1 = '$K_{Glc}^{Y}$'
ks2 = '$K_{Fru}^{Y}$'
ks3 = '$K_{Glc}^{LAB}$'
ks4 = '$K_{EtOH}^{AAB}$'
ks5 = '$K_{LA}^{AAB}$'
k1 = '$k_{Y}$'
k2 = '$k_{LAB}$'
k3 = '$k_{AAB}$'
y1 = '$Y_{Glc|Y}$'
y2 = '$Y_{Glc|LAB}$'
y3 = '$Y_{Fru|Y}$'
y4 = '$Y^{Glc}_{EtOH|Y}$'
y5 = '$Y^{Fru}_{EtOH|Y}$'
y6 = '$Y_{EtOH|AAB}$'
y7 = '$Y_{LA|LAB}$'
y8 = '$Y_{LA|AAB}$'
y9 = '$Y_{Ac|LAB}$'
y10 = '$Y^{EtOH}_{Ac|AAB}$'
y11 = '$Y^{LA}_{Ac|AAB}$'
par = c(mu1,mu2,mu3,mu4,mu5,ks1,ks2,ks3,ks4,ks5,k1,k2,k3,y1,y2,y3,y4,y5,y6,y7,y8,y9,y10,y11)
data = names(data)
data = data[2:25]
p = list()
for (i in seq_along(data)){
p[[i]] = traceplot(fit,pars=data[i],inc_warmup=T,size=0.01,alpha=0.3)+ ylab(TeX(par[i]))+
theme(axis.text=element_text(size=6),axis.title=element_text(size=6),legend.position="none",
axis.line.x = element_line( size = 0.01),axis.line.y = element_line( size = 0.01),
axis.ticks = element_line( size = 0.01))+
scale_color_jco()
}
plot = plot_grid(p[[1]],p[[2]],p[[3]],p[[4]],
p[[5]],p[[6]],p[[7]],p[[8]],
p[[9]],p[[10]],p[[11]],p[[12]],
p[[13]],p[[14]],p[[15]],p[[16]],
p[[17]],p[[18]],p[[19]],p[[20]],
p[[21]],p[[22]],p[[23]],p[[24]],
ncol=4,align='hv')
save_plot('fig9.png',plot,base_height = 6,base_width = 10)
library(cowplot)
library(ggplot2)
library(rstan)
library(latex2exp)
library(ggsci)
#####################################at the end of this script, there is a function to produce the tables
###### of the fits in the supplementary material#####
#####################################################
setwd('C:/Users/mmorenozam/Documents/MyPapers/1.cbf_v1.0/2.outputs/1.main') # where the outputs are
#in the following line, change for the name of the output of which one wants the traceplots
load('m5_c.RSave')
getSimsTable <- function(x, ...){
require(dplyr)
nChains <- dim(x)[2]
nPost <- dim(x)[1]
x %>%
as.data.frame(...) %>%
mutate(chain = rep(1:nChains, ea = nPost),
iteration = rep(1:nPost, nChains))
}
data = getSimsTable(fit)
data
library(cowplot)
library(ggplot2)
library(rstan)
library(latex2exp)
library(ggsci)
#####################################at the end of this script, there is a function to produce the tables
###### of the fits in the supplementary material#####
#####################################################
setwd('C:/Users/mmorenozam/Documents/MyPapers/1.cbf_v1.0/2.outputs/1.main') # where the outputs are
#in the following line, change for the name of the output of which one wants the traceplots
load('m5_b2.RSave')
#in the following line, change for the name of the output of which one wants the traceplots
load('m5_c.RSave')
summary(fit)
summary(fit,pars=c('sigma','mu1','mu2','mu3','mu4'))
summary(fit,pars=c('mu1','mu2','mu3','mu4','mu5','ks1','ks2','ks3','ks4','ks5',
'k1','k2','k3','yc1','yc2','yc3','yc4','yc5','yc6','yc7','yc8','yc9',
'yc10','yc11','sigma'))
library(shinystan)
launch_shinystan(fit)
summary.mcmc.list <- function (object, quantiles = c(0.025, 0.25, 0.5, 0.75, 0.975),
...)
{
x <- mcmc.list(object)
statnames <- c("Mean", "SD", "Naive SE", "Time-series SE")
varstats <- matrix(nrow = nvar(x), ncol = length(statnames),
dimnames = list(varnames(x), statnames))
xtsvar <- matrix(nrow = nchain(x), ncol = nvar(x))
if (is.matrix(x[[1]])) {
for (i in 1:nchain(x)) for (j in 1:nvar(x)) xtsvar[i,
j] <- coda:::safespec0(x[[i]][, j])
xlong <- do.call("rbind", x)
}
else {
for (i in 1:nchain(x)) xtsvar[i, ] <- coda:::safespec0(x[[i]])
xlong <- as.matrix(x)
}
xmean <- apply(xlong, 2, mean, na.rm = TRUE)
xvar <- apply(xlong, 2, var, na.rm = TRUE)
xtsvar <- apply(xtsvar, 2, mean, na.rm = TRUE)
varquant <- t(apply(xlong, 2, quantile, quantiles, na.rm = TRUE))
varstats[, 1] <- xmean
varstats[, 2] <- sqrt(xvar)
varstats[, 3] <- sqrt(xvar/(niter(x) * nchain(x)))
varstats[, 4] <- sqrt(xtsvar/(niter(x) * nchain(x)))
varquant <- drop(varquant)
varstats <- drop(varstats)
out <- list(statistics = varstats, quantiles = varquant,
start = start(x), end = end(x), thin = thin(x), nchain = nchain(x))
class(out) <- "summary.mcmc"
return(out)
}
parameterTable <- function(fit, pars = names(fit)){
rstan:::monitor(as.array(fit, pars = pars), warmup = 0, print = FALSE)
}
parameterTable(fit)
niums<-parameterTable(fit)
niums
niums
niums<-parameterTable(fit,pars=c('mu1','mu2','mu3','mu4','mu5','ks1','ks2','ks3','ks4','ks5',
'k1','k2','k3','yc1','yc2','yc3','yc4','yc5','yc6','yc7','yc8','yc9',
'yc10','yc11','sigma'))
niums
summary.mcmc.list(fit)
data = getSimsTable(fit)
getSimsTable <- function(x, ...){
require(dplyr)
nChains <- dim(x)[2]
nPost <- dim(x)[1]
x %>%
as.data.frame(...) %>%
mutate(chain = rep(1:nChains, ea = nPost),
iteration = rep(1:nPost, nChains))
}
data = getSimsTable(fit)
data
niums
library(cowplot)
library(ggplot2)
library(dplyr)
library(tidyr)
library(shinystan)
setwd('C:/Users/mmorenozam/Documents/MyPapers/1.cbf_v1.0/2.outputs/1.main')
load('m5_c.Rsave')
#launch_shinystan(fit)
T = 16
x0 = c(51.963,57.741,0,0,0,0.029180401,0.007868827,3.36634E-06)
t0 = 0
ts = c(6,12,18,24,30,36,42,48,54,60,66,72,84,96,120,144)
x = structure(c(43.884,24.25,26.098,11.871,4.607,1.714,4.821,5.409,3.701,3.696,1.544,4.428,1.086,2.337,2.837,3.486,
49.588,35.584,33.876,19.871,8.607,2.825,4.821,7.409,4.812,7.548,1.544,5.539,1.086,2.337,2.837,3.486,
2.97,9.081,9.62,6.067,11.211,16.213,10.215,20.106,22.492,5.637,5.636,13.85,4.782,9.3,4.267,7.448,
0.267,0.801,1.256,1.745,5.944,3.246,7.787,7.991,6.943,8.593,8.296,6.85,8.021,7.667,7.209,8.117,
0.152,1.616,0.979,4.033,5.121,2.759,3.541,4.278,4.141,6.139,3.219,5.319,4.328,3.621,4.208,5.93,
0.026187332,0.955193281,0.238831309,0.045299276,0.01021154,0.06608323,0.008262115,0.000554742,0.000267973,0.006013001,0.002203389,0.000375916,0.000889388,0.000948618,0.000110177,0.000105461,
0.067128975,0.07959944,0.248834167,0.20179482,0.416783016,0.401707567,0.566121975,0.386286929,0.372314554,0.199484893,0.167459586,0.161402409,0.14484717,0.008748025,0.006575216,0.00181514,
9.82105E-06,1.70278E-05,2.16351E-05,5.49741E-05,0.00010572,0.000177484,0.000259512,0.000681017,0.000364887,0.00118075,0.001914953,0.000676329,0.001127608,0.000237224,6.32642E-05,2.64337E-05),
.Dim=c(16,8))
x1 = rbind(x0,x)
scl = c(max(x1[,1]),max(x1[,2]),max(x1[,3]),max(x1[,4]),max(x1[,5]),max(x1[,6]),max(x1[,7]),max(x1[,8]))
pred = as.data.frame(fit, pars = "x_hat") %>%
gather(factor_key = TRUE) %>%
group_by(key) %>%
summarize(lb = quantile(value, probs = 0.025),
median = quantile(value, probs = 0.5),
ub = quantile(value, probs = 0.975))
sp = split(pred,rep(1:8,each=T))
for (i in 1:8){
sp[i] = lapply(sp[i],"*",scl[i])
sp[i] = mapply(cbind, sp[i], "obs"=list(x[,i]), SIMPLIFY=F)
sp[i] = mapply(cbind, sp[i], "time"=list(ts), SIMPLIFY=F)
sp[i] = mapply(rbind,list(c(NA,x0[i],x0[i],x0[i],x0[i],0)),sp[i],SIMPLIFY=F)
}
hali = 0.96
p1 = ggplot(as.data.frame(sp[1]), aes(x = X1.time, y = X1.obs)) +
geom_point() + ylab(expression(paste('mg g(pulp) '^{-1}))) + xlab('') + #ggtitle('Glu')+
theme(text = element_text(size = 16), axis.text = element_text(size = 14),
legend.position = "none", strip.text = element_text(size = 14),
plot.title = element_text(hjust = hali,margin = margin(t = 15, b = -50), size = 20),
panel.grid.major = element_blank(),panel.grid.minor = element_blank(),panel.background = element_blank(),
axis.line = element_line(colour='black'),
plot.margin = unit(c(0.1,0.1,0.1,0.1),'cm'))+
geom_line(aes(x = X1.time, y = X1.median),color='red',size=0.70) +
geom_line(aes(x = X1.time, y = X1.ub),color='red',linetype='dashed') +
geom_line(aes(x = X1.time, y = X1.lb),color='red',linetype='dashed') +
scale_x_continuous(expand = c(0, 0),breaks= seq(0,144,by=24),sec.axis = dup_axis(labels=NULL)) +
scale_y_continuous(expand = c(0, 0),breaks= seq(0,60,by=10),sec.axis = dup_axis(labels=NULL,name=NULL)) +
coord_cartesian(xlim=c(-0.05,148),ylim=c(-0.05,60))
p2 = ggplot(as.data.frame(sp[2]), aes(x = X2.time, y = X2.obs)) +
geom_point() + ylab('') + xlab('') + #ggtitle('Fru')+
theme(text = element_text(size = 16), axis.text = element_text(size = 14),
legend.position = "none", strip.text = element_text(size = 14),
plot.title = element_text(hjust = hali,margin = margin(t = 15, b = -50), size = 20),
panel.grid.major = element_blank(),panel.grid.minor = element_blank(),panel.background = element_blank(),
axis.line = element_line(colour='black'),
plot.margin = unit(c(0.1,0.1,0.1,0.1),'cm'))+
geom_line(aes(x = X2.time, y = X2.median),color='red',size=0.70) +
geom_line(aes(x = X2.time, y = X2.ub),color='red',linetype='dashed') +
geom_line(aes(x = X2.time, y = X2.lb),color='red',linetype='dashed') +
scale_x_continuous(expand = c(0, 0),breaks= seq(0,144,by=24),sec.axis = dup_axis(labels=NULL)) +
scale_y_continuous(expand = c(0, 0),breaks= seq(0,60,by=10),sec.axis = dup_axis(labels=NULL,name=NULL)) +
coord_cartesian(xlim=c(-0.05,148),ylim=c(-0.05,60))
p3 = ggplot(as.data.frame(sp[3]), aes(x = X3.time, y = X3.obs)) +
geom_point() + ylab('') + xlab('') + #ggtitle('EtOH')+
theme(text = element_text(size = 16), axis.text = element_text(size = 14),
legend.position = "none", strip.text = element_text(size = 14),
plot.title = element_text(hjust = hali,margin = margin(t = 15, b = -50), size = 20),
panel.grid.major = element_blank(),panel.grid.minor = element_blank(),panel.background = element_blank(),
axis.line = element_line(colour='black'),
plot.margin = unit(c(0.1,0.1,0.1,0.1),'cm'))+
geom_line(aes(x = X3.time, y = X3.median),color='red',size=0.70) +
geom_line(aes(x = X3.time, y = X3.ub),color='red',linetype='dashed') +
geom_line(aes(x = X3.time, y = X3.lb),color='red',linetype='dashed') +
scale_x_continuous(expand = c(0, 0),breaks= seq(0,144,by=24),sec.axis = dup_axis(labels=NULL)) +
scale_y_continuous(expand = c(0, 0),breaks= seq(0,25,by=5),sec.axis = dup_axis(labels=NULL)) +
coord_cartesian(xlim=c(-0.05,148),ylim=c(-0.05,25))
p4 = ggplot(as.data.frame(sp[4]), aes(x = X4.time, y = X4.obs)) +
geom_point() + ylab('') + xlab('') + #ggtitle('LA')+
theme(text = element_text(size = 16), axis.text = element_text(size = 14),
legend.position = "none", strip.text = element_text(size = 14),
plot.title = element_text(hjust = hali,margin = margin(t = 15, b = -50), size = 20),
panel.grid.major = element_blank(),panel.grid.minor = element_blank(),panel.background = element_blank(),
axis.line = element_line(colour='black'),
plot.margin = unit(c(0.1,0.1,0.1,0.1),'cm'))+
geom_line(aes(x = X4.time, y = X4.median),color='red',size=0.70) +
geom_line(aes(x = X4.time, y = X4.ub),color='red',linetype='dashed') +
geom_line(aes(x = X4.time, y = X4.lb),color='red',linetype='dashed') +
scale_x_continuous(expand = c(0, 0),breaks= seq(0,144,by=24),sec.axis = dup_axis(labels=NULL)) +
scale_y_continuous(expand = c(0, 0),sec.axis = dup_axis(labels=NULL)) +
coord_cartesian(xlim=c(-0.05,148),ylim=c(-0.05,10))
p5 = ggplot(as.data.frame(sp[5]), aes(x = X5.time, y = X5.obs)) +
geom_point() + ylab(expression(paste('mg g(pulp) '^{-1}))) + xlab('time (h)') + #ggtitle('Ac')+
theme(text = element_text(size = 16), axis.text = element_text(size = 14),
legend.position = "none", strip.text = element_text(size = 14),
plot.title = element_text(hjust = hali,margin = margin(t = 15, b = -50), size = 20),
panel.grid.major = element_blank(),panel.grid.minor = element_blank(),panel.background = element_blank(),
axis.line = element_line(colour='black'),
plot.margin = unit(c(0.1,0.1,0.1,0.1),'cm'))+
geom_line(aes(x = X5.time, y = X5.median),color='red',size=0.70) +
geom_line(aes(x = X5.time, y = X5.ub),color='red',linetype='dashed') +
geom_line(aes(x = X5.time, y = X5.lb),color='red',linetype='dashed') +
scale_x_continuous(expand = c(0, 0),breaks= seq(0,144,by=24),sec.axis = dup_axis(labels=NULL,name=NULL)) +
scale_y_continuous(expand = c(0, 0),sec.axis = dup_axis(labels=NULL,name=NULL)) +
coord_cartesian(xlim=c(-0.05,148),ylim=c(-0.05,7))
p6 = ggplot(as.data.frame(sp[6]), aes(x = X6.time, y = X6.obs)) +
geom_point() + ylab('') + xlab('time (h)') + #ggtitle('Y')+
theme(text = element_text(size = 16), axis.text = element_text(size = 14),
legend.position = "none", strip.text = element_text(size = 14),
plot.title = element_text(hjust = hali,margin = margin(t = 15, b = -50), size = 20),
panel.grid.major = element_blank(),panel.grid.minor = element_blank(),panel.background = element_blank(),
axis.line = element_line(colour='black'),
plot.margin = unit(c(0.1,0.1,0.1,0.1),'cm'))+
geom_line(aes(x = X6.time, y = X6.median),color='red',size=0.70) +
geom_line(aes(x = X6.time, y = X6.ub),color='red',linetype='dashed') +
geom_line(aes(x = X6.time, y = X6.lb),color='red',linetype='dashed') +
scale_x_continuous(expand = c(0, 0),breaks= seq(0,144,by=24),sec.axis = dup_axis(labels=NULL,name=NULL)) +
scale_y_continuous(expand = c(0, 0),breaks= seq(0,1,by=0.25),sec.axis = dup_axis(labels=NULL,name=NULL)) +
coord_cartesian(xlim=c(-0.05,148),ylim=c(-0.001,1))
p7 = ggplot(as.data.frame(sp[7]), aes(x = X7.time, y = X7.obs)) +
geom_point() + ylab('') + xlab('time (h)') + #ggtitle('LAB')+
theme(text = element_text(size = 16), axis.text = element_text(size = 14),
legend.position = "none", strip.text = element_text(size = 14),
plot.title = element_text(hjust = hali,margin = margin(t = 15, b = -50), size = 20),
panel.grid.major = element_blank(),panel.grid.minor = element_blank(),panel.background = element_blank(),
axis.line = element_line(colour='black'),
plot.margin = unit(c(0.1,0.1,0.1,0.1),'cm'))+
geom_line(aes(x = X7.time, y = X7.median),color='red',size=0.70) +
geom_line(aes(x = X7.time, y = X7.ub),color='red',linetype='dashed') +
geom_line(aes(x = X7.time, y = X7.lb),color='red',linetype='dashed') +
scale_x_continuous(expand = c(0, 0),breaks= seq(0,144,by=24),sec.axis = dup_axis(labels=NULL,name=NULL)) +
scale_y_continuous(expand = c(0, 0),breaks= seq(0,0.60,by=0.15),sec.axis = dup_axis(labels=NULL,name=NULL)) +
coord_cartesian(xlim=c(-0.05,148),ylim=c(-0.001,0.60))
p8 = ggplot(as.data.frame(sp[8]), aes(x = X8.time, y = X8.obs)) +
geom_point() + ylab('') + xlab('time (h)') + #ggtitle('AAB')+
theme(text = element_text(size = 16), axis.text = element_text(size = 14),
legend.position = "none", strip.text = element_text(size = 14),
plot.title = element_text(hjust = hali,margin = margin(t = 15, b = -50), size = 20),
panel.grid.major = element_blank(),panel.grid.minor = element_blank(),panel.background = element_blank(),
axis.line = element_line(colour='black'),
plot.margin = unit(c(0.1,0.1,0.1,0.1),'cm'))+
geom_line(aes(x = X8.time, y = X8.median),color='red',size=0.70) +
geom_line(aes(x = X8.time, y = X8.ub),color='red',linetype='dashed') +
geom_line(aes(x = X8.time, y = X8.lb),color='red',linetype='dashed') +
scale_x_continuous(expand = c(0, 0),breaks= seq(0,144,by=24),sec.axis = dup_axis(labels=NULL,name=NULL)) +
scale_y_continuous(expand = c(0, 0),breaks= seq(0,0.0020,by=0.0005),sec.axis = dup_axis(labels=NULL,name=NULL)) +
coord_cartesian(xlim=c(-0.05,148),ylim=c(-0.0001,0.0020))
camu = plot_grid(p1,p2,p3,p4,p5,p6,p7,p8,ncol=4,align='hv',labels=c("(a)","(b)","(c)","(d)","(e)","(f)","(g)","(h)"),
label_size = 18)
save_plot('fig12.png',camu,base_height = 8.3,base_width = 17.2)
